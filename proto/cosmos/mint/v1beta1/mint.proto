syntax = "proto3";
package cosmos.mint.v1beta1;

option go_package = "github.com/cosmos/cosmos-sdk/x/mint/types";

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";

// Minter represents the minting state.
message Minter {
  // current annual expected provisions
  string annual_provisions = 1 [
    (gogoproto.moretags)   = "yaml:\"annual_provisions\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];
}

// Params holds parameters for the mint module.
message Params {
  option (gogoproto.goproto_stringer) = false;


  // type of coin to mint
  string mint_denom = 1;
  // annual provisions
  string annual_provisions = 2 [
    (gogoproto.moretags)   = "yaml:\"annual_provisions\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];
  // maximum reward per epoch
  string max_reward_per_epoch = 3 [
    (gogoproto.moretags)   = "yaml:\"max_reward_per_epoch\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];
  // minimum reward per epoch
  string min_reward_per_epoch = 4 [
    (gogoproto.moretags)   = "yaml:\"min_reward_per_epoch\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];
  // duration of an epoch
  google.protobuf.Duration epoch_duration = 5 [
    (gogoproto.moretags)    = "yaml:\"epoch_duration\"",
    (gogoproto.stdduration) = true,
    (gogoproto.nullable)    = false
  ];
  // number of epochs in halven period
  int64 halven_period_in_epoch = 6 [(gogoproto.moretags) = "yaml:\"halven_period_in_epoch\""];
  // expected epochs per year
  int64 epochs_per_year = 7 [(gogoproto.moretags) = "yaml:\"epochs_per_year\""];
}
